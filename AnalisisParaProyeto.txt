https://www.youtube.com/watch?v=i6SRxFpMm3k - Analizador lexico 
https://www.youtube.com/watch?v=sJKFLcsysVs&list=PLTd6ceoshpreZuklA7RBMubSmhE0OHWh_&index=3 - Analizador lexico (Video en ingles)
https://www.youtube.com/watch?v=8nBoVjEOCMI&list=PLTd6ceoshpreZuklA7RBMubSmhE0OHWh_&index=4 - Analizador sintactico (Video en ingles)

Analizador lexico
1. Lectura del archivo .txt
	1.1 Recordar que el caracter de salida $ indica que el programa en ejecucion a llegado a su fin. 
		1. Tener en consideracion las siguientes funciones del analizador lexico
		2. El analizador léxico también realiza otras funciones de gran importancia:
		3. Eliminar los comentarios del programa.
		4. Eliminar espacios en blanco, tabuladores, retorno de carro, etc, y en general, todo aquello que carezca de significado según la sintaxis 
		del lenguaje.
		5. Reconocer los identificadores de usuario, números, palabras reservadas del lenguaje, etc., y tratarlos correctamente con respecto a la tabla de 
		símbolos (solo en los casos en que este analizador deba tratar con dicha estructura).
		6. Llevar la cuenta del número de línea por la que va leyendo, por si se produce algún error, dar información acerca de dónde se ha producido.
		7. Avisar de errores léxicos. Por ejemplo, si el carácter ‘@’ no pertenece al lenguaje, se debe emitir un error.
2. Deteccion del lexema correspondiente a una expresion regular, esta expreson regular solo devuelve el nombre del token, pero pasa la 
variable entera en caso de ser necesario.  
3. Definir los tokens que se utilizaran. 
¿Vamos a usar literales?

1. Lectura de archivo txt
2. Realizar la lectura de cada una de las lineas con expresiones regulares para saber si estas corresponden a una de las expresiones 
regulares definidas, los valores que se recolectaran a partir de cada una de las lecturas realizadas, los valores a recolectar en esta parte 
son: 
    2.1 Linea del token: El numero de linea en el que se encuentra.
    2.2 Tipo de token: Este valor se obtiene del emparejamiento que resulta del emparejamiento con una de las expresiones regulares. 
    2.3 Valor o elemento de la operacion. 
    2.4 Otros. 

Aspectos a considerar: 
    ERRORES: 
        1: Sintaxis incorrecta: El codigo a arrojar cuando una de las lineas leidas no entre dentro de las expresiones regulares solicitadas. 
        2. Expresiones matematicas erroreas: Como Divisiones entre 0. 

Analizador sintactico
    1. Genera la salida de la instruccion. 
    2. Construir el arbol (Esto es opcional y solo si logra mostrarlo)

Tareas a realizar
    1. Definir lineas que permitan identificadores, numeros y operadores.
        1.1 Operadores a usar:
            =
            -
            +
            /
            "
            <       
            >
        1.2 Reglas de identificadores.
            1.1.1 Que comiencen con una letra. 
            1.2.2 Se permiten numeros (Siempre cumpliendo la primera regla).
            1.2.3 El unico caracter especial admitido es _.
            1.2.4 La longitud minima de 3 caracteres. 
            1.2.5 La longitud maxima es de 15 caracteres
        1.3 Reglas de palabras reservadas
            1.3.1 Solo se permiten letras ya sea en miniscula o mayuscula. 
            1.3.2 Puede tener un parentesis

Tokens usados en el analizador lexico
    100: Palabras reservadas
    200: identificadores
    300: Operadores
    400: Valores

Estructura de archivo
int var1 = 2
int num1 = 2
int var2 = var1
str var3 = 'Alexander'
str var4 = 'Ismael'
str var5 = var4
num1 + var1
num1 + 2
2 + num1
1 + 1 
1 - 1
show(1 - 1)
show(1 + 1)
show(var1)
show(concat(var3, var4))
show(concat(var3, var4, var5))
show(repeat(concat(str1,str2)))

Estructura y aspectos a considerar del anlizador sintactico

1.) Sentencia de asignacion
    <Palabra reservada int|str><identificador><=><valor | OperacionMatematica | funcion>
        Aqui se tiene que tener en consideracion que el valor tiene que coincidir con el tipo de valor es decir
        str si lo que se quiere almacenar es una cadena, int si lo que quiere almacenar es un entero. 
2.) Sentencia de suma, resta y concatenacion 
    <digitos|identificador><+ | - | '>'><digitos|identificador>
3.) Sentecia de funcion
    <palabraReservada><parentesis><value | identificador><,*>< value, identificador >

Errores a corregir
1. Hay errores cuando solo se pone una linea debido a que el salto de linea se cambia por el simbolo $ (Arreglado)
2. Hay algunos caracteres que rompen el programa como "."
3. Tomar en consideracion cuando los nombres de las variables son iguales no pueden estar en ambos diccionarios (Arreglado)
4. Tiene que corregirse el conteo de lineas (Lo hare desde el analizis lexicografico)
5. En caso de realizar el conteo de las lineas se tiene que eliminar las variables line que estan 
6. Hacer que las palabras reservadas no puedan ser usadas como identificador (Arreglado)
7. Cambiar la expresion regular en las asignaciones para que permita operaciones. 
8. Existe la posibilidad de hacer que las operaciones sean entre varios elementos.